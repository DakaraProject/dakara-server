version: 1.8.1-{build}

image:
  - Ubuntu
  - Visual Studio 2019

build: false

# restrict to branches
branches:
  only:
    - master
    - develop

environment:
  WINDOWS_TEST: false

  # setup tests matrix
  matrix:
    - PYTHON: "3.7"
    - PYTHON: "3.8"
    - PYTHON: "3.9"
    - PYTHON: "3.10"
    - PYTHON: "3.11"
      WINDOWS_TEST: true

for:
  - matrix:
      only:
        - image: Ubuntu

    cache:
      # enable cache for Python dependencies
      - "$HOME/.cache/pip"

    init:
      # load virtual env
      - "source $HOME/venv$PYTHON/bin/activate"

      # check current python version
      - "python --version"

    install:
      # upgrade pip
      - "python -m pip install --upgrade pip"

      # install dependencies for test
      - "python -m pip install -r requirements.txt -r requirements_dev.txt"

    test_script:
      # run tests
      - "python -m pytest -v --cov-report term"

      # run code formatting tests
      - "python -m isort . --check"
      - "python -m black . --check"
      - "python -m flake8"

    after_test:
      # upload coverage stats to codecov.io
      # codecov token is stored in appveyor settings
      - "python -m codecov"

  - matrix:
      only:
        - image: Visual Studio 2019
          WINDOWS_TEST: true

    cache:
      # enable cache for Python dependencies
      - "%LOCALAPPDATA%\\pip\\Cache"

    init:
      # check current python version
      - "py -%PYTHON% --version"

    install:
      # upgrade pip
      - "py -%PYTHON% -m pip install --upgrade pip"

      # install dependencies for test
      - "py -%PYTHON% -m pip install -r requirements.txt -r requirements_dev.txt"

    test_script:
      # run tests
      - "py -%PYTHON% -m pytest -v --cov-report term"

      # run code formatting tests
      - "py -%PYTHON% -m isort . --check"
      - "py -%PYTHON% -m black . --check"
      - "py -%PYTHON% -m flake8"

    after_test:
      # upload coverage stats to codecov.io
      # codecov token is stored in appveyor settings
      - "py -%PYTHON% -m codecov"
